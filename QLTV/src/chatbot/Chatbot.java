/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package chatbot;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

/**
 *
 * @author LENOVO Ideapad 3
 */
public class Chatbot extends javax.swing.JPanel {

    // Các biến giao diện
    private JTextArea chatArea;
    private JTextField inputField;
    private JButton sendButton;
    private JScrollPane scrollPane;
    
    // Controller xử lý logic chatbot
    private final ChatbotController controller;
    
    /**
     * Creates new form Chatbot
     */
     public Chatbot() {
        initComponents();            // Khởi tạo giao diện
        customInit();
        controller = new ChatbotController();  // Tạo đối tượng controller
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Hàm customInit() dùng để thiết lập giao diện chatbot của bạn.
     * Bạn có thể thêm các component và event listener ở đây.
     */
    private void customInit() {
        // Đặt lại layout cho panel (ví dụ sử dụng BorderLayout)
        this.setLayout(new BorderLayout());

        // Tạo vùng hiển thị chat
        chatArea = new JTextArea(15, 20);
        chatArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(chatArea);

        // Tạo ô nhập liệu và nút gửi
        inputField = new JTextField(25);
        sendButton = new JButton("Gửi");

        // Tạo panel cho input
        JPanel inputPanel = new JPanel();
        inputPanel.add(inputField);
        inputPanel.add(sendButton);

        // Thêm các thành phần vào panel chính
        this.add(scrollPane, BorderLayout.CENTER);
        this.add(inputPanel, BorderLayout.SOUTH);

        // Thiết lập sự kiện cho nút gửi và ô nhập liệu
        sendButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                processInput();
            }
        });
        inputField.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                processInput();
            }
        });
    }
    
    /**
     * Xử lý khi người dùng nhập và gửi tin nhắn
     */
    private void processInput() {
        String userInput = inputField.getText().trim();
        if (!userInput.isEmpty()) {
            // Hiển thị nội dung người dùng
            chatArea.append("Bạn: " + userInput + "\n");
            // Gọi controller để lấy phản hồi
            String response = controller.getResponse(userInput);
            chatArea.append("Chatbot: " + response + "\n\n");
            // Xoá trường nhập
            inputField.setText("");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
